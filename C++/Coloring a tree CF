#include <bits/stdc++.h>
using namespace std;
#define int long long
#define fast ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
#define pb push_back
#define ff first
#define ss second
#define rep(i,a,b) for(int i=a;i<b;i++)
#define repp(i,a,b) for(int i=a;i<=b;i++)
#define endl '\n'
#define mod 1000000007

bool sorttt(const pair<int,int> &a, 
              const pair<int,int> &b) 
{ 
    return (a.second < b.second); 
}
    vector<int> v[100001];
    int arr[200001], xy[100001]={0};
    int col[100001]={0};
    int n,m,d=0,ans=0;
    bool rec[100001]={0};
    vector<int> vec;
    int mx=0,k=-1;
    set<int> se;

// void dfs(int x,int c){
//     rec[x]=1;
//     rep(i,0,v[x].size()){
//         if(!rec[v[x][i]]&&arr[i]==1){
//             dfs(v[x][i],c+1);
//         }
//         else if(!rec[v[x][i]]&&arr[i]==0){
//             dfs(v[x][i],c);
//         }
//     }
//     if(c<=m)d++;
// }

void dfs(int x){
    vec.pb(x);
    col[x]=arr[x];
    for(auto it : v[x]){
        if(find(vec.begin(),vec.end(),v[x][it])==vec.end()&&!xy[v[x][it]]){ dfs(v[x][it]);}
    }
}
bool bfs(int x, int n,int m){
    int f=0;
    bool vis[n+1];
    rep(i,1,n+1)vis[i]=false;
    vis[x]=true;
    list<int> q;
    q.pb(x);
    while(!q.empty()){
        int s=q.front();
        if(s==m)f=1;
        q.pop_front();
        for(int i=0;i<v[s].size();i++){
            if(!vis[v[s][i]]){
                vis[v[s][i]]=true;
                q.pb(v[s][i]);
            }
        }
    }
    if(f)return true;
    return false;
}

signed main()
{
    fast
    int ans=0,x,y; cin>>n;
    vector<pair<int, int> > ab;
    rep(i,0,n-1){
        cin>>x;
        if(x<i+2)ab.pb({x,i+2});
        else ab.pb({i+2,x});
    }
    repp(i,1,n) cin>>arr[i];
    rep(i,0,ab.size()){
        if(arr[ab[i].ff]!=arr[ab[i].ss])ans++;
    }
    ans++;
    cout<<ans<<endl;
}
